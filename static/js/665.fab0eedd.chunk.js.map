{"version":3,"file":"static/js/665.fab0eedd.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","utilities/isEmpty.js","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Inputbox = styled.div`\n  position: relative;\n  max-width: 100%;\n  height: 50px;\n  margin-bottom: 50px;\n  &:last-child {\n  margin-bottom: 0;\n`;\n\nexport const Input = styled.input`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  border: 2px solid #000;\n  outline: none;\n  background: none;\n  padding: 10px;\n  border-radius: 10px;\n  font-size: 1.2em;\n  box-sizing: border-box;\n  &:focus ~ span {\n    transform: translateX(-13px) translateY(-35px);\n    font-size: 1em;\n  }\n  &:not(:placeholder-shown) ~ span {\n    color: #e60576;\n    transform: translateX(-13px) translateY(-35px);\n    font-size: 1em;\n  }\n  &:valid ~ span {\n    color: #e60576;\n    transform: translateX(-13px) translateY(-35px);\n    font-size: 1em;\n  }\n`;\n\nexport const Span = styled.span`\n  position: absolute;\n  top: 14px;\n  left: 20px;\n  font-size: 1em;\n  transition: 0.6s;\n  font-family: sans-serif;\n`;\n\nexport const Btn = styled.button`\n  cursor: pointer;\n  position: absolute;\n  top: 0;\n  left: 0;\n  border: 2px solid #000;\n  outline: none;\n  background: none;\n  padding: 10px;\n  border-radius: 10px;\n  font-size: 1.2em;\n  width: 40%;\n  background: #2a3166;\n  color: #fff;\n  border: #fff;\n  &:hover {\n    background: #e60576;\n    box-shadow: 0px 0px 48px 0px rgba(0, 0, 0, 0.31) inset;\n  }\n`;\n","import { useAddContactMutation } from 'services/phonebookApi';\nimport { toast } from 'react-toastify';\n\nimport { Inputbox, Input, Span, Btn } from './ContactForm.styled';\n\nfunction ContactForm({ contacts }) {\n  const [addContact] = useAddContactMutation();\n\n  const handleSubmit = event => {\n    const form = event.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    event.preventDefault();\n\n    for (const contact of contacts) {\n      if (contact.name === name)\n        return toast.warn(\n          `${name} is already in your contacts with the phone number ${contact.number}`\n        );\n\n      if (contact.number === number)\n        return toast.warn(\n          `${number} is already in your contacts with the name ${contact.name}`\n        );\n    }\n    addContact({ name, number });\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Inputbox>\n        <label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\" \"\n          />\n          <Span>Name</Span>\n        </label>\n      </Inputbox>\n      <Inputbox>\n        <label>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\" \"\n          />\n          <Span>Number</Span>\n        </label>\n      </Inputbox>\n      <Inputbox>\n        <Btn type=\"submit\">Add contact</Btn>\n      </Inputbox>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Filterbox = styled.div`\n  position: relative;\n  max-width: 100%;\n  height: 50px;\n  margin-bottom: 50px;\n`;\n\nexport const Input = styled.input`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  border: 2px solid #000;\n  outline: none;\n  background: none;\n  padding: 10px;\n  border-radius: 10px;\n  font-size: 1.2em;\n  box-sizing: border-box;\n  &:focus ~ span {\n    color: #e60576;\n    transform: translateX(-13px) translateY(-35px);\n    font-size: 1em;\n  }\n  &:not(:placeholder-shown) ~ span {\n    color: #e60576;\n    transform: translateX(-13px) translateY(-35px);\n    font-size: 1em;\n  }\n`;\n\nexport const Span = styled.span`\n  position: absolute;\n  top: 14px;\n  left: 20px;\n  font-size: 1em;\n  transition: 0.6s;\n  font-family: sans-serif;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/Actions';\nimport { Filterbox, Input, Span } from './Filter.styled';\n\nfunction Filter() {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  const onFilter = event => {\n    dispatch(filterContacts(event.target.value));\n  };\n  return (\n    <Filterbox>\n      <label>\n        <Input\n          onChange={onFilter}\n          type=\"text\"\n          value={filter}\n          name=\"filter\"\n          placeholder=\" \"\n        />\n        <Span>Find contacts by name</Span>\n      </label>\n    </Filterbox>\n  );\n}\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const List = styled.li`\n  display: flex;\n  &::before {\n    content: '♦';\n    color: #e60576;\n    font-weight: bold;\n    display: inline-block;\n    width: 1em;\n  }\n`;\n\nexport const Btn = styled.button`\n  cursor: pointer;\n  border: 2px solid #fff;\n  outline: none;\n  padding: 8px;\n  border-radius: 10px;\n  font-size: 1em;\n  width: 30%;\n  background: #2a3166;\n  color: #fff;\n  display: flex;\n  justify-content: space-evenly;\n  &:hover {\n    background: #e60576;\n    box-shadow: 0px 0px 48px 0px rgba(0, 0, 0, 0.31) inset;\n  }\n`;\n\nexport const ElementWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n","import { useSelector } from 'react-redux';\nimport { useMemo } from 'react';\nimport { BsTrash3 } from 'react-icons/bs';\nimport { useDeleteContactMutation } from 'services/phonebookApi';\n\nimport { List, Btn, ElementWrapper } from './ContactList.styled';\n\nfunction ContactList({ contacts }) {\n  const filter = useSelector(state => state.filter);\n  const normalizedFilter = filter.toLowerCase().trim();\n\n  const filteredContacts = useMemo(\n    () =>\n      contacts\n        .filter(contact =>\n          contact.name.toLowerCase().includes(normalizedFilter)\n        )\n        .sort((a, b) => a.name.localeCompare(b.name)),\n    [normalizedFilter, contacts]\n  );\n\n  const [deleteContact] = useDeleteContactMutation();\n\n  return (\n    <ul>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ElementWrapper key={'el' + id}>\n          <List key={id}>\n            <a href={`tel:${number}`}>\n              {name} <br />\n              {number}\n            </a>\n          </List>\n          <Btn key={'btn' + id} onClick={() => deleteContact(id)}>\n            Delete <BsTrash3 />\n          </Btn>\n        </ElementWrapper>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  text-align: center;\n  font-size: 1em;\n  font-family: sans-serif;\n`;\n","import { Message } from './Notification.styled';\n\nfunction Notification() {\n  return (\n    <>\n      <Message>There is no contacts to show 😔</Message>\n    </>\n  );\n}\n\nexport default Notification;\n","const isEmpty = arr => arr.length === 0;\n\nexport default isEmpty;\n","import styled from 'styled-components';\n\nexport const Center = styled.div`\n  max-width: 400px;\n  margin: 0 auto 25px auto;\n  position: relative;\n  padding: 50px 25px;\n  background: #fff;\n  border-radius: 10px;\n  box-shadow: 0px 12px 22px 3px rgba(0, 0, 0, 0.36);\n`;\n\nexport const MainHeader = styled.h1`\n  font-size: 2em;\n\n  padding: 10px;\n  color: #000;\n  letter-spacing: 5px;\n  margin-bottom: 40px;\n  font-weight: bold;\n  padding-left: 10px;\n`;\n\nexport const SecondHeader = styled.h2`\n  font-size: 1.5em;\n\n  padding: 10px;\n  color: #000;\n  letter-spacing: 5px;\n  margin-top: 60px;\n  margin-bottom: 40px;\n  font-weight: bold;\n  padding-left: 10px;\n`;\nexport const SpinnerWrapper = styled.div`\n  margin: 10px 0 0 100px;\n`;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nimport { useGetContactsQuery } from 'services/phonebookApi';\nimport Notification from 'components/Notification/Notification';\nimport isEmpty from 'utilities/isEmpty';\nimport Loader from 'components/Loader/Loader';\n\nimport {\n  Center,\n  MainHeader,\n  SecondHeader,\n  SpinnerWrapper,\n} from './Contacts.styled';\n\nconst Contacts = () => {\n  const {\n    data: contacts,\n    isLoading,\n    isSuccess,\n    isError,\n    error,\n  } = useGetContactsQuery();\n\n  let content;\n\n  if (isLoading) {\n    content = (\n      <SpinnerWrapper>\n        <Loader />\n      </SpinnerWrapper>\n    );\n  } else if (isSuccess && !isEmpty(contacts)) {\n    content = <ContactList contacts={contacts} />;\n  } else if (isSuccess && isEmpty(contacts)) {\n    content = <Notification />;\n  } else if (isError) {\n    content = <div>{error.toString()}</div>;\n  }\n\n  return (\n    <>\n      <Center>\n        <MainHeader>Phonebook</MainHeader>\n        <ContactForm contacts={contacts} />\n        <SecondHeader>Contacts</SecondHeader>\n        <Filter />\n        {content}\n      </Center>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Inputbox","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","Span","_templateObject3","Btn","_templateObject4","_ref","contacts","_useAddContactMutatio","useAddContactMutation","addContact","_slicedToArray","_jsxs","onSubmit","event","form","target","name","value","number","preventDefault","_step","_iterator","_createForOfIteratorHelper","s","n","done","contact","toast","concat","err","e","f","reset","children","_jsx","type","pattern","title","required","placeholder","Filterbox","filter","useSelector","state","dispatch","useDispatch","onChange","filterContacts","List","ElementWrapper","normalizedFilter","toLowerCase","trim","filteredContacts","useMemo","includes","sort","a","b","localeCompare","_useDeleteContactMuta","useDeleteContactMutation","deleteContact","map","_ref2","id","href","onClick","BsTrash3","Message","_Fragment","arr","length","Center","MainHeader","SecondHeader","SpinnerWrapper","content","_useGetContactsQuery","useGetContactsQuery","data","isLoading","isSuccess","isError","error","Loader","isEmpty","ContactList","Notification","toString","ContactForm","Filter"],"sourceRoot":""}